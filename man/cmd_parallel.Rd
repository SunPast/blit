% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cmd-parallel.R
\name{cmd_parallel}
\alias{cmd_parallel}
\title{Execute a list of commands}
\usage{
cmd_parallel(
  ...,
  stdouts = FALSE,
  stderrs = FALSE,
  stdins = NULL,
  stdout_callbacks = NULL,
  stderr_callbacks = NULL,
  timeouts = NULL,
  threads = NULL,
  verbose = TRUE
)
}
\arguments{
\item{...}{A list of \code{command} object.}

\item{stdouts, stderrs}{Specifies how the output streams of the child process
are handled. One of or a list of following values:
\itemize{
\item \code{TRUE}: Prints the child process output to the R console. Note that the
subprocess does not inherit the terminal. If the command requires a
terminal, use an empty string \code{""} instead.
\item \code{FALSE}: Suppresses the output stream.
\item \strong{string}: An empty string \code{""} inherits the standard output stream from
the main R process (Printing in the R console). If the main R process
lacks a standard output stream, such as in RGui on Windows, an error is
thrown. Alternative, a file name or path to redirect the output. If a
relative path is specified, it remains relative to the current working
directory, even if a different directory is set using \code{\link[=cmd_wd]{cmd_wd()}}.
\item \code{connection}: A writable R \code{\link{connection}} object. If the connection is not
\code{\link[=open]{open()}}, it will be automatically opened.
}

The \code{stderrs} parameter also accepts \code{NULL}, which redirects it to the same
connection (i.e., pipe or file) as \code{stdouts}.

When a single file path is specified, the stdout/stderr of all commands will
be merged into this single file.}

\item{stdins}{should the input be diverted? One of or a list of following
values:
\itemize{
\item \code{NULL}: No standard input.
\item \strong{string}: An empty string \code{""} inherits the standard output stream from
the main R process. If the main R process lacks a standard output stream,
such as in RGui on Windows, an error is thrown. Alternative, a file name
or path to be used as standard input.
}}

\item{stdout_callbacks, stderr_callbacks}{One of or a list of following
values:
\itemize{
\item \code{NULL}: no callback function.
\item \code{function}: A function invoked for each line of standard output or error.
Non-text (non-character) output will be ignored. The function should accept
two arguments: one for the standard output or error and another for the
running \code{\link[processx:process]{process}} object.
}}

\item{timeouts}{Timeout in seconds. Can be a single value or a list,
specifying the maximum elapsed time for running the command in the separate
process.}

\item{threads}{Number of threads to use.}

\item{verbose}{A single boolean value indicating whether the command
execution should be verbose.}
}
\value{
A list of exit status invisiblely.
}
\description{
Execute a list of commands
}
\seealso{
\itemize{
\item \code{\link[=cmd_wd]{cmd_wd()}}/\code{\link[=cmd_envvar]{cmd_envvar()}}/\code{\link[=cmd_envpath]{cmd_envpath()}}
\item \code{\link[=cmd_run]{cmd_run()}}/\code{\link[=cmd_help]{cmd_help()}}/\code{\link[=cmd_background]{cmd_background()}}
}
}
